name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed lib/
      
    - name: Analyze project source
      run: flutter analyze --fatal-infos
      
    - name: Generate code
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: Run tests
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  build_ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: Build iOS (no codesign)
      run: flutter build ios --release --no-codesign
      
    - name: Create IPA
      run: |
        mkdir -p build/ios/iphoneos/Payload
        cp -r build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/
        cd build/ios/iphoneos && zip -r Runner.ipa Payload/
        
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-ipa
        path: build/ios/iphoneos/Runner.ipa

  build_web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter pub run build_runner build --delete-conflicting-outputs
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Upload Web artifact
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  deploy_web:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build_web
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download Web artifact
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: ./web-build
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./web-build
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2 